version: "2.1"
services:
  ###############################################################
  #    Nest
  ###############################################################
  nest:
    image: node:16-alpine
    user: node
    working_dir: /app
    command: ["npm", "run", "start:dev"]
    volumes:
      - ./application:/app
      - ./module.yaml:/module.yaml
    ports:
      - "8080:8080"

  ###############################################################
  #    Mercure.rocks runtime for SSE
  ###############################################################
  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeMe!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeMe!'
    command: /usr/bin/caddy run -config /etc/caddy/Caddyfile.dev
    ports:
      - "8081:80"
    volumes:
      - caddy_data:/data
      - caddy_config:/config



  ###############################################################
  #    StateFun runtime
  ###############################################################

  statefun-manager:
    image: apache/flink-statefun:3.1.0
    expose:
      - "6123"
    ports:
      - "8082:8081"
    environment:
      ROLE: master
      MASTER_HOST: statefun-manager
    volumes:
      - ./module.yaml:/opt/statefun/modules/workshop/module.yaml
      - ./conf:/opt/flink/conf

  statefun-worker:
    image: apache/flink-statefun:3.1.0
    expose:
      - "6121"
      - "6122"
    environment:
      ROLE: worker
      MASTER_HOST: statefun-manager
    volumes:
      - ./module.yaml:/opt/statefun/modules/workshop/module.yaml
      - ./conf:/opt/flink/conf

  ###############################################################
  #    Kafka for ingress and egress
  ###############################################################

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka-broker:
    image: wurstmeister/kafka:2.12-2.0.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka-broker"
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_CREATE_TOPICS: "transactions:1:1,alerts:1:1,confirmed:1:1,thresholds:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  serve:
    image: node:16-alpine
    user: node
    working_dir: /app
    command: ["npm", "run", "start"]
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"

volumes:
  caddy_data:
  caddy_config:
